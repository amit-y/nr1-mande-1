export const activeEvents = () => {
  return ' PageAction, MobileVideo, RokuVideo, BrowserVideo '
}
const defaultToOne = metric => {
  return metric !== undefined ? metric : 1
}

export default {
  title: 'Video',
  eventTypes: [
    {
      event: 'Global',
      attributes: [
        ['appName', 'Platform'],
        ['playerVersion', 'Player'],
        ['playerName', 'Player'],
        ['contentSrc', 'Content'],
        ['countryCode', 'Geography'],
        ['contentIsLive', 'Content'],
        ['contentTitle', 'Content'],
      ],
    },
    {
      event: 'PageAction',
      eventSelector: { attribute: 'Delivery Type', value: 'Web' },
      attributes: [
        ['userAgentName', 'Platform'],
        ['userAgentOS', 'Platform'],
        ['userAgentVersion', 'Platform'],
        ['isAd', 'Content'],
        ['asnOrganization', 'Geography'],
        ['city', 'Geography'],
        ['regionCode', 'Geography'],
        ['message', 'Error'],
      ],
    },
    {
      event: 'MobileVideo',
      eventSelector: { attribute: 'Delivery Type', value: 'Mobile' },
      attributes: [
        ['isAd', 'Content'],
        ['asnOrganization', 'Geography'],
        ['city', 'Geography'],
        ['regionCode', 'Geography'],
        ['device', 'Platform'],
        ['deviceGroup', 'Platform'],
        ['deviceType', 'Platform'],
        ['osName', 'Platform'],
        ['osVersion', 'Platform'],
        ['message', 'Error'],
      ],
    },
    {
      event: 'RokuVideo',
      eventSelector: { attribute: 'Delivery Type', value: 'OTT' },
      attributes: [
        ['device', 'Platform'],
        ['deviceGroup', 'Platform'],
        ['deviceType', 'Platform'],
        ['osName', 'Platform'],
        ['osVersion', 'Platform'],
        ['errorMessage', 'Error'],
      ],
    },
    {
      event: 'BrowserVideo',
      eventSelector: { attribute: 'Delivery Type', value: 'Web' },
      attributes: [
        ['userAgentName', 'Platform'],
        ['userAgentOS', 'Platform'],
        ['userAgentVersion', 'Platform'],
        ['isAd', 'Content'],
        // ['asnOrganization', 'Geography'],
        // ['city', 'Geography'],
        // ['regionCode', 'Geography'],
        ['message', 'Error'],
      ],
    },
  ],
  overviewConfig: [
    {
      nrql: `SELECT filter(average(timeSinceLoad), WHERE actionName = 'CONTENT_REQUEST') as 'Time to Content Request', 
      filter(average(timeSinceRequested)/1000, WHERE actionName='CONTENT_START') as 'Time To First Frame'
      FROM ${activeEvents()} TIMESERIES `,
      columnStart: 1,
      columnEnd: 6,
      chartSize: 'medium',
      chartType: 'area',
      title: 'Content Request vs Video Start (Average in Seconds)',
      useSince: true,
    },
    {
      nrql: `SELECT filter(count(*), WHERE actionName = 'CONTENT_REQUEST') as 'Total Requests', 
      filter(count(*), WHERE actionName = 'CONTENT_START') as 'Total Starts' 
      FROM ${activeEvents()} TIMESERIES `,
      columnStart: 7,
      columnEnd: 12,
      chartSize: 'medium',
      chartType: 'line',
      title: 'Total Requests vs Total Starts',
      useSince: true,
    },
    {
      nrql: `SELECT filter(count(*), WHERE actionName = 'CONTENT_ERROR' and contentPlayhead > 0) / filter(count(*), WHERE actionName = 'CONTENT_REQUEST') as 'In-stream Errors', 
      filter(uniqueCount(viewId), WHERE actionName = 'CONTENT_ERROR') - filter(uniqueCount(viewId), WHERE actionName like 'CONTENT%' and contentPlayhead > 0 AND numberOfErrors > 0) AS 'Failures Before Start' FROM ${activeEvents()} TIMESERIES `,
      columnStart: 1,
      columnEnd: 4,
      chartSize: 'medium',
      chartType: 'area',
      title: 'In-stream Errors and Failures Before Start',
      useSince: true,
    },
    {
      nrql: `FROM ${activeEvents()} SELECT filter(sum(timeSinceBufferBegin), WHERE actionName = 'CONTENT_BUFFER_END' AND bufferType = 'connection') / sum(playtimeSinceLastEvent) * 100 as 'Rebuffer Ratio' TIMESERIES `,
      columnStart: 5,
      columnEnd: 8,
      chartSize: 'medium',
      chartType: 'area',
      title: 'Rebuffer Ratio',
      useSince: true,
    },
    {
      nrql: `FROM ${activeEvents()} SELECT filter(count(*), WHERE actionName = 'CONTENT_BUFFER_START' and bufferType = 'connection')/filter(count(*), WHERE actionName IN ('CONTENT_START', 'CONTENT_NEXT')) as 'Interruption Rate' TIMESERIES `,
      columnStart: 9,
      columnEnd: 12,
      chartSize: 'medium',
      chartType: 'area',
      title: 'Interruption Rate',
      useSince: true,
    },
  ],
  metrics: [
    {
      id: 'VSF',
      title: 'Video Start Failure (%)',
      threshold: {
        critical: 2,
        warning: 1,
      },
      query: {
        nrql: `FROM ${activeEvents()} SELECT (filter(uniqueCount(viewId), WHERE actionName = 'CONTENT_ERROR') - filter(uniqueCount(viewId), WHERE actionName like 'CONTENT%' and contentPlayhead > 0 AND numberOfErrors > 0))/filter(uniqueCount(viewId), where actionName != 'PLAYER_READY') * 100 as 'result'`,
        lookup: 'result',
      },
      qualityScoreStrategy: 'zeroOrOne',
      detailConfig: [
        {
          nrql: `FROM ${activeEvents()} SELECT (filter(uniqueCount(viewId), WHERE actionName = 'CONTENT_ERROR') - filter(uniqueCount(viewId), WHERE actionName like 'CONTENT%' and contentPlayhead > 0 AND numberOfErrors > 0))/filter(uniqueCount(viewId), where actionName != 'PLAYER_READY') * 100 as '%'`,
          columnStart: 1,
          columnEnd: 3,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Impact %',
          useSince: true,
        },
        {
          nrql: `FROM ${activeEvents()} SELECT count(*) where actionName = 'CONTENT_ERROR' and contentPlayhead = 0 facet viewId LIMIT 25`,
          noFacet: 'true',
          columnStart: 4,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'bar',
          title: 'Views with errors before start (Click for details)',
          useSince: true,
          click: 'openSession',
        },
        {
          nrql: `FROM ${activeEvents()} SELECT (filter(uniqueCount(viewId), WHERE actionName = 'CONTENT_ERROR') - filter(uniqueCount(viewId), WHERE actionName like 'CONTENT%' and contentPlayhead > 0 AND numberOfErrors > 0))/filter(uniqueCount(viewId), where actionName != 'PLAYER_READY') * 100 as '%' TIMESERIES MAX `,
          columnStart: 1,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'area',
          title: 'Video Start Failure Ratio',
          useSince: true,
        },
        {
          nrql: `FROM ${activeEvents()} SELECT count(*) where actionName = 'CONTENT_ERROR' and contentPlayhead = 0 LIMIT 25 `,
          facets: 'message',
          columnStart: 1,
          columnEnd: 12,
          chartSize: 'medium',
          chartType: 'bar',
          title: 'Errors before start, by Error Message',
          useSince: true,
        },
      ],
    },
    {
      id: 'ER',
      title: 'In-Stream Error Ratio (%)',
      threshold: {
        critical: 0.15,
        warning: 0.1,
      },
      query: {
        nrql: `FROM ${activeEvents()} SELECT filter(uniqueCount(viewId), where actionName = 'CONTENT_ERROR' and contentPlayhead > 0) / filter(uniqueCount(viewId), where actionName = 'CONTENT_REQUEST') * 100 as 'result'`,
        lookup: 'result',
      },
      findUser: {
        nrql: `FROM ${activeEvents()} SELECT filter(clamp_max(count(*), 1), where actionName = 'CONTENT_ERROR' and contentPlayhead > 0) / filter(clamp_max(count(*), 1), where actionName = 'CONTENT_REQUEST') * 100 as 'result' `,
        lookup: 'result',
      },
      qualityScoreStrategy: 'clampMinZeroMaxOne',
      detailConfig: [
        {
          nrql: `FROM ${activeEvents()} SELECT filter(uniqueCount(viewId), where actionName = 'CONTENT_ERROR' and contentPlayhead > 0) / filter(uniqueCount(viewId), where actionName = 'CONTENT_REQUEST') * 100 as '%' `,
          columnStart: 1,
          columnEnd: 3,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Views above Threshold (.15%)',
          useSince: true,
        },
        {
          nrql: `FROM ${activeEvents()} SELECT count(*) where actionName = 'CONTENT_ERROR' and contentPlayhead > 0 facet viewId LIMIT 25`,
          noFacet: true,
          columnStart: 4,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'bar',
          title: 'Views with Errors (Click for details)',
          useSince: true,
          click: 'openSession',
        },
        {
          nrql: `FROM ${activeEvents()} SELECT filter(uniqueCount(viewId), where actionName = 'CONTENT_ERROR' and contentPlayhead > 0) / filter(uniqueCount(viewId), where actionName = 'CONTENT_REQUEST') * 100 as '%' TIMESERIES MAX `,
          facets: 'deviceType',
          columnStart: 1,
          columnEnd: 6,
          chartSize: 'medium',
          chartType: 'area',
          title: 'In-Stream Error Ratio',
          useSince: true,
        },
        {
          nrql: `FROM ${activeEvents()} SELECT count(*) where actionName = 'CONTENT_ERROR' and contentPlayhead > 0 `,
          facets: 'message',
          columnStart: 7,
          columnEnd: 12,
          chartSize: 'medium',
          chartType: 'bar',
          title: 'In-Stream Errors by Message',
          useSince: true,
        },
      ],
    },
    {
      id: 'VST',
      title: 'Video Start Time',
      threshold: {
        critical: 4,
        warning: 3.5,
      },
      query: {
        nrql: `FROM ${activeEvents()} SELECT filter(percentile(timeSinceRequested/1000, 50), WHERE actionName = 'CONTENT_START') - filter(percentile(timeSinceAdBreakBegin/1000, 50), where actionName = 'AD_BREAK_END' and adPosition = 'pre') as 'percentile' `,
        lookup: 'percentile',
        title: 'Video Start Time (Median)',
      },
      findUser: {
        nrql: `FROM ${activeEvents()} SELECT (clamp_min(filter(sum(timeSinceRequested/1000), WHERE actionName = 'CONTENT_START'), 0) - clamp_min(filter(sum(timeSinceAdBreakBegin/1000), where actionName = 'AD_BREAK_END' and adPosition = 'pre'), 0))/filter(uniqueCount(viewId), where actionName='CONTENT_START') as 'result' `,
        lookup: 'result',
      },
      qualityScoreStrategy: 'clampMinZeroMaxOne',
      detailConfig: [
        {
          nrql: `SELECT filter(uniqueCount(viewId), WHERE timeSinceRequested > 4000 and actionName = 'CONTENT_START')/uniqueCount(viewId) * 100 as '%' FROM ${activeEvents()} `,
          columnStart: 1,
          columnEnd: 3,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Views above Threshold (4s)',
          useSince: true,
        },
        {
          nrql: `SELECT filter(sum(timeSinceRequested)/1000, WHERE actionName = 'CONTENT_START') - filter(sum(timeSinceAdBreakBegin)/1000, where actionName = 'AD_BREAK_END' and adPosition = 'pre') as 'Time To First Frame (Average)' FROM ${activeEvents()} FACET viewId LIMIT 25`,
          noFacet: true,
          columnStart: 4,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'bar',
          title: 'Views, Average Video Start Time (Click for details)',
          useSince: true,
          click: 'openSession',
        },
        {
          nrql: `FROM ${activeEvents()} SELECT filter(percentile(timeSinceRequested/1000, 50), WHERE actionName = 'CONTENT_START') - filter(percentile(timeSinceAdBreakBegin/1000, 50), where actionName = 'AD_BREAK_END' and adPosition = 'pre') as '50th Percentile' `,
          columnStart: 1,
          columnEnd: 3,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Video Start Time',
          useSince: true,
        },
        {
          nrql: `FROM ${activeEvents()} SELECT filter(percentile(timeSinceRequested/1000, 50), WHERE actionName = 'CONTENT_START') - filter(percentile(timeSinceAdBreakBegin/1000, 50), where actionName = 'AD_BREAK_END' and adPosition = 'pre') as '50th Percentile' TIMESERIES MAX `,
          facets: 'deviceType',
          columnStart: 4,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'area',
          title: 'Video Start Time ',
          useSince: true,
        },
        {
          nrql: `FROM ${activeEvents()} SELECT percentile(timeSinceLoad, 50) as 'seconds' WHERE actionName = 'CONTENT_START' `,
          columnStart: 1,
          columnEnd: 3,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Video Start Time - With Ads',
          useSince: true,
        },
        {
          nrql: `FROM ${activeEvents()} SELECT percentile(timeSinceLoad, 50) as 'seconds' WHERE actionName = 'CONTENT_START' TIMESERIES MAX `,
          facets: 'deviceType',
          columnStart: 4,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'area',
          title: 'Video Start Time - With Ads',
          useSince: true,
        },
        {
          nrql: `FROM ${activeEvents()} SELECT percentile(timeSinceRequested/1000,50) as 'seconds' where actionName = 'AD_START' and adPosition = 'pre'`,
          columnStart: 1,
          columnEnd: 3,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Video Start Time - Pre Roll Ad',
          useSince: true,
        },
        {
          nrql: `FROM ${activeEvents()} SELECT percentile(timeSinceRequested/1000,50) as 'seconds' where actionName = 'AD_START' and adPosition = 'pre' TIMESERIES MAX `,
          facets: 'deviceType',
          columnStart: 4,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'area',
          title: 'Video Start Time - Pre Roll Ad',
          useSince: true,
        },
      ],
    },
    {
      id: 'CRR',
      title: 'Rebuffering Ratio (%)',
      threshold: {
        critical: 2.12,
        warning: 2,
      },
      query: {
        nrql: `FROM ${activeEvents()} SELECT filter(sum(timeSinceBufferBegin), WHERE actionName = 'CONTENT_BUFFER_END' AND bufferType = 'connection') / sum(playtimeSinceLastEvent) * 100 as 'result'`,
        lookup: 'result',
      },
      qualityScoreStrategy: 'clampMinZeroMaxOne',
      detailConfig: [
        {
          nrql: `FROM ${activeEvents()} SELECT filter(sum(timeSinceBufferBegin), WHERE actionName = 'CONTENT_BUFFER_END' and bufferType = 'connection') / sum(playtimeSinceLastEvent) * 100 as '%' `,
          columnStart: 1,
          columnEnd: 3,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Rebuffering Ratio',
          useSince: true,
        },
        {
          nrql: `FROM ${activeEvents()} SELECT sum(timeSinceBufferBegin)/1000 as 'Total Buffering' WHERE actionName = 'CONTENT_BUFFER_END' and bufferType = 'connection' FACET viewId LIMIT 25 `,
          noFacet: true,
          columnStart: 4,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'bar',
          title: 'Sessions with most Rebuffering, Seconds (Click for details)',
          useSince: true,
          click: 'openSession',
        },
        {
          nrql: `FROM ${activeEvents()} SELECT filter(sum(timeSinceBufferBegin), WHERE actionName = 'CONTENT_BUFFER_END' and bufferType = 'connection') / sum(playtimeSinceLastEvent) * 100 as '%' TIMESERIES MAX `,
          facets: `deviceType`,
          columnStart: 1,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'area',
          title: 'Rebuffering Ratio by Device Type',
          useSince: true,
        },
        {
          nrql: `FROM ${activeEvents()} SELECT percentile(timeSinceBufferBegin/1000, 50) as 'seconds', percentile(timeSinceBufferBegin/1000, 90) as 'seconds', percentile(timeSinceBufferBegin/1000, 95) as 'seconds', percentile(timeSinceBufferBegin/1000, 99) as 'seconds' WHERE actionName = 'CONTENT_BUFFER_END' and contentPlayhead = 0 `,
          columnStart: 1,
          columnEnd: 4,
          chartSize: 'medium',
          chartType: 'billboard',
          title: 'Initial Buffer Time',
          useSince: true,
        },
        {
          nrql: `FROM ${activeEvents()} SELECT percentile(timeSinceBufferBegin/1000, 50) as 'seconds', percentile(timeSinceBufferBegin/1000, 90) as 'seconds', percentile(timeSinceBufferBegin/1000, 95) as 'seconds', percentile(timeSinceBufferBegin/1000, 99) as 'seconds' WHERE actionName = 'CONTENT_BUFFER_END' and contentPlayhead = 0 TIMESERIES MAX `,
          facets: '',
          columnStart: 5,
          columnEnd: 12,
          chartSize: 'medium',
          chartType: 'area',
          title: 'Initial Buffer Time',
          useSince: true,
        },
      ],
    },
    {
      id: 'BR',
      title: 'Average Bitrate (mbps)',
      threshold: {
        critical: 4,
        warning: 4.5,
        type: 'below',
      },
      invertCompareTo: 'true',
      query: {
        nrql: `FROM ${activeEvents()} SELECT average(contentBitrate)/1000000 as 'result' where contentBitrate is not null and actionName like 'CONTENT%' `,
        lookup: 'result',
      },
      detailConfig: [
        {
          nrql: `SELECT percentage(count(*), WHERE avgBitrate < 4000000) as '' FROM ( SELECT average(contentBitrate) as avgBitrate FROM ${activeEvents()} FACET viewId WHERE contentBitrate IS NOT NULL AND actionName like 'CONTENT%' LIMIT MAX) `,
          noFacet: true,
          columnStart: 1,
          columnEnd: 4,
          chartSize: 'small',
          chartType: 'billboard',
          title: '% Views below Threshold (4 mbsp)',
          useSince: true,
        },
        {
          nrql: `SELECT average(mbps)/1000000 FROM (FROM ${activeEvents()} SELECT average(contentBitrate) as 'mbps' where contentBitrate is not null and actionName like 'CONTENT%' facet viewId LIMIT MAX) WHERE mbps < 4000000 FACET viewId LIMIT 25`,
          noFacet: true,
          columnStart: 5,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'bar',
          title: 'Low Average Content Bitrate by View (Click for details)',
          useSince: true,
          click: 'openSession',
        },
        {
          nrql: `FROM ${activeEvents()} SELECT percentile(contentBitrate, 50)/1000000, percentile(contentBitrate, 90)/1000000, percentile(contentBitrate, 95)/1000000, percentile(contentBitrate, 99)/1000000 where contentBitrate is not null and actionName like 'CONTENT%' `,
          columnStart: 1,
          columnEnd: 6,
          chartSize: 'medium',
          chartType: 'billboard',
          title: 'Content Bitrate Percentile',
          useSince: true,
        },
        {
          nrql: `FROM ${activeEvents()} SELECT percentile(contentBitrate, 50)/1000000 as '', percentile(contentBitrate, 90)/1000000 as '', percentile(contentBitrate, 95)/1000000 as '', percentile(contentBitrate, 99)/1000000 as '' where contentBitrate is not null and actionName like 'CONTENT%' `,
          facets: 'deviceType',
          columnStart: 7,
          columnEnd: 12,
          chartSize: 'medium',
          chartType: 'billboard',
          title: 'Content Bitrate Percentile by Device Type',
          useSince: true,
        },
        {
          nrql: `FROM ${activeEvents()} SELECT percentile(contentBitrate, 50)/1000000, percentile(contentBitrate, 90)/1000000, percentile(contentBitrate, 95)/1000000, percentile(contentBitrate, 99)/1000000 where contentBitrate is not null and actionName like 'CONTENT%' TIMESERIES MAX `,
          columnStart: 1,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'area',
          title: 'Content Bitrate Percentile',
          useSince: true,
        },
      ],
    },
    {
      id: 'CI',
      title: 'Interruption Rate',
      threshold: {
        critical: 23,
        warning: 20,
      },
      query: {
        nrql: `FROM ${activeEvents()} SELECT filter(count(*), WHERE actionName = 'CONTENT_BUFFER_START' and bufferType = 'connection') / filter(count(*), WHERE actionName IN ('CONTENT_START', 'CONTENT_NEXT')) as 'result'`,
        lookup: 'result',
      },
      qualityScoreStrategy: 'clampMinZeroMaxOne',
      detailConfig: [
        {
          nrql: `FROM ${activeEvents()} SELECT filter(uniqueCount(viewId), WHERE actionName = 'CONTENT_BUFFER_START' and bufferType = 'connection') / filter(uniqueCount(viewId), WHERE actionName IN ('CONTENT_START', 'CONTENT_NEXT')) * 100 as '%' `,
          columnStart: 1,
          columnEnd: 3,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Views above Threshold (23%)',
          useSince: true,
        },
        {
          nrql: `FROM ${activeEvents()} SELECT count(*) WHERE actionName = 'CONTENT_BUFFER_START' and bufferType = 'connection' FACET viewId LIMIT 25 `,
          noFacet: true,
          columnStart: 4,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'bar',
          title: 'Views with Interruptions (Click for details)',
          useSince: true,
          click: 'openSession',
        },
        {
          nrql: `FROM ${activeEvents()} SELECT filter(count(*), WHERE actionName = 'CONTENT_BUFFER_START' and bufferType = 'connection') / filter(count(*), WHERE actionName IN ('CONTENT_START', 'CONTENT_NEXT')) * 100 as '%' `,
          columnStart: 1,
          columnEnd: 3,
          chartSize: 'small',
          chartType: 'billboard',
          title: 'Interruption Rate',
          useSince: true,
        },
        {
          nrql: `FROM ${activeEvents()} SELECT filter(count(*), WHERE actionName = 'CONTENT_BUFFER_START' and bufferType = 'connection') / filter(count(*), WHERE actionName IN ('CONTENT_START', 'CONTENT_NEXT')) * 100 as '%' timeseries MAX `,
          facets: `deviceType`,
          columnStart: 4,
          columnEnd: 12,
          chartSize: 'small',
          chartType: 'scatter',
          title: 'Interruption Rate',
          useSince: true,
        },
      ],
    },
  ],
  qualityScore: {
    include: ['VSF', 'VST', 'CI', 'CRR', 'ER'],
    formula: metrics => {
      const vsf = defaultToOne(metrics.VSF)
      const rest =
        (defaultToOne(metrics.VST) +
          defaultToOne(metrics.CI) +
          defaultToOne(metrics.CRR) +
          defaultToOne(metrics.ER)) *
        25
      return vsf * rest
    },
    threshold: {
      critical: 80,
      warning: 90,
      type: 'below',
    },
  },
}
